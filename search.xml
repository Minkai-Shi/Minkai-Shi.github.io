<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Cleaning of the Sailor 14K Four Seasons Weaving Dyeing Pen Rod</title>
    <url>/2024/07/02/Cleaning-of-the-Sailor-14K/</url>
    <content><![CDATA[<p>Cleaning of the Sailor 14K Four Seasons Weaving Dyeing Pen Rod. Inject ink and repeatedly inhale clean water, seal the pen cap with a tissue, and remove the pen tip seal sleeve. For the assembly part, use rubber to pinch the plastic pen holder and unscrew the metal thread separately. Take out the pen tip and tongue from the tip sleeve, loosen the metal sleeve at the waist of the ink dispenser, and remove the screw piston head. All the above parts should be cleaned of the mixture of ink and water, as well as dust and silicone oil, and air dried. Silicone oil should be applied around the piston head, and the thread of the pen grip should be fixed with insect glue. The remaining parts should be reinstalled in their original state.That’s all<br><img src="/upload/Sailor1.jpg" alt="pic1" title="pic1"></p>
]]></content>
      <categories>
        <category>pen</category>
      </categories>
      <tags>
        <tag>pen</tag>
      </tags>
  </entry>
  <entry>
    <title>Play with DFRobot Geiger Counter Module</title>
    <url>/2024/07/21/Geiger-Counter/</url>
    <content><![CDATA[<p>I saw an activity on the EEPW (Electronic Engineering&amp;Product World) forum about playing with the “DFRobot Geiger Counter Module”. I happened to have learned about Geiger counters in textbooks, so I bought a module to DIY. Place an order at the official DFrobot brand store on Taobao and it will arrive one day after placing the order.<br><img src="/upload/Geiger1.jpg" alt="pic1" title="pic1"><br>The official code provided by DFrobot Geiger counter is based on Arduino. The program architecture uses external interrupts for counting, and then refreshes the data every 3 seconds in the main loop, takes 3 data to calculate CPM value, and then converts CPM into uSv&#x2F;h or nSv&#x2F;h and displays it on OLED LCD.<br>Attempt to rewrite the code in MicroPython and optimize the count by storing data every 3 seconds and caching it 20 times for a total of 1 minute to calculate CPM. The CPM is calculated based on the cache time before reaching 1 minute, and the longer the cache time, the more stable the data changes.<br>The wiring of OLED and Geiger counters is consistent with the Arduino code mentioned earlier.<br>After obtaining the DFRobot Geiger counter module, I also bought an adapter pin so that it can be connected to the ESP32 board for debugging. The official Arduino routine uses pin D3 to connect the D of the DFRobot Geiger counter module, but it is not recommended to use pin 3 and Rx pin shared by the ESP32 development board’s digital pin. Instead, it should be debugged using pin 14.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;  </span></span><br><span class="line"><span class="string">DFrobot DFRobot Geiger Counter Module experiment</span></span><br><span class="line"><span class="string">pin assign : pin DFrobot Geiger Module--&gt;ESP32 IO  </span></span><br><span class="line"><span class="string">         (D)--&gt;(14)  </span></span><br><span class="line"><span class="string">         (+)--&gt;(5V)  </span></span><br><span class="line"><span class="string">         (-)--&gt;(GND)  </span></span><br><span class="line"><span class="string">           </span></span><br><span class="line"><span class="string">OLED(IIC) Module--&gt;ESP32 IO  </span></span><br><span class="line"><span class="string">         GND--&gt;(GND)  </span></span><br><span class="line"><span class="string">         VCC--&gt;(5V)  </span></span><br><span class="line"><span class="string">         SCL--&gt;(18)  </span></span><br><span class="line"><span class="string">         SDA--&gt;(23)  </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>  </span><br><span class="line"><span class="comment">#Import Pin Module</span></span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin  </span><br><span class="line"><span class="keyword">import</span> time  </span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> SoftI2C  </span><br><span class="line"><span class="keyword">from</span> ssd1306 <span class="keyword">import</span> SSD1306_I2C  <span class="comment">#I2C oled  </span></span><br><span class="line"><span class="comment">#Create software I2C object </span></span><br><span class="line">i2c = SoftI2C(sda=Pin(<span class="number">23</span>), scl=Pin(<span class="number">18</span>))  </span><br><span class="line"><span class="comment">#Create OLED object,Resolution of OLED,I2C interface</span></span><br><span class="line">oled = SSD1306_I2C(<span class="number">128</span>, <span class="number">64</span>, i2c)   </span><br><span class="line"><span class="comment">#Geiger in  fenbl</span></span><br><span class="line">Geiger_In=Pin(<span class="number">14</span>,Pin.IN,Pin.PULL_UP)  </span><br><span class="line"><span class="comment">#Geiger Counter external interrupt function</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Geiger_In_irq</span>(<span class="params">Geiger_In</span>):  </span><br><span class="line">    <span class="keyword">global</span> numPulse  </span><br><span class="line">    numPulse = numPulse + <span class="number">1</span>   </span><br><span class="line"><span class="comment">#Program entrance</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:  </span><br><span class="line">    <span class="keyword">global</span> numPulse  </span><br><span class="line">    BUFFER_SIZE = <span class="number">20</span>  </span><br><span class="line">    rows, cols = <span class="number">2</span>, BUFFER_SIZE  </span><br><span class="line">    mem_data = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(cols)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(rows)]  </span><br><span class="line">    numPulse = <span class="number">0</span>  </span><br><span class="line">    pos = <span class="number">0</span>      </span><br><span class="line">    oled.fill(<span class="number">0</span>)  <span class="comment">#Clear screen    </span></span><br><span class="line">    oled.text(<span class="string">&quot;Geiger Counter&quot;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>)  <span class="comment">#display string </span></span><br><span class="line">    oled.show()  <span class="comment">#Execute Display     </span></span><br><span class="line">    Geiger_In.irq(Geiger_In_irq,Pin.IRQ_FALLING)  <span class="comment">#Configure external interrupt, trigger falling edge</span></span><br><span class="line">      </span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:    </span><br><span class="line">        time.sleep_ms(<span class="number">3000</span>)  </span><br><span class="line">        mem_data[<span class="number">0</span>][pos] = time.ticks_ms()  </span><br><span class="line">        mem_data[<span class="number">1</span>][pos] = numPulse  </span><br><span class="line">        numPulse = <span class="number">0</span>  </span><br><span class="line">        cpm=<span class="number">0</span>  </span><br><span class="line">        pos_old = pos  </span><br><span class="line">        pos = (pos+<span class="number">1</span>)%BUFFER_SIZE          </span><br><span class="line">        numAll = <span class="number">0</span>  </span><br><span class="line">        time_now = mem_data[<span class="number">0</span>][pos_old]   </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BUFFER_SIZE - <span class="number">1</span>):  </span><br><span class="line">            <span class="keyword">if</span> mem_data[<span class="number">0</span>][pos_old] != <span class="number">0</span>:  </span><br><span class="line">                numAll = numAll + mem_data[<span class="number">1</span>][pos_old]  </span><br><span class="line">                time_old = mem_data[<span class="number">0</span>][pos_old]  </span><br><span class="line">                <span class="keyword">if</span> pos_old == <span class="number">0</span>:  </span><br><span class="line">                    pos_old =  BUFFER_SIZE - <span class="number">1</span>  </span><br><span class="line">                <span class="keyword">else</span>:  </span><br><span class="line">                    pos_old = pos_old - <span class="number">1</span>  </span><br><span class="line">        <span class="keyword">if</span> time_now-time_old &gt; <span class="number">0</span>:  </span><br><span class="line">            cpm = numAll*<span class="number">1000</span>*<span class="number">60</span>/(time_now-time_old)  </span><br><span class="line">              </span><br><span class="line">        str1 = <span class="string">&quot;&#123;:.0f&#125;&quot;</span>.<span class="built_in">format</span>(cpm)    <span class="comment">#CPM Convert to string </span></span><br><span class="line">        str2 = <span class="string">&quot;&#123;:.3f&#125;&quot;</span>.<span class="built_in">format</span>(cpm/<span class="number">151</span>)<span class="comment">#uSv/h Convert to string  </span></span><br><span class="line">        oled.fill(<span class="number">0</span>)  <span class="comment">#Clear screen </span></span><br><span class="line">        oled.text(<span class="string">&quot;Geiger Counter&quot;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>)  <span class="comment">#display string</span></span><br><span class="line">        oled.text(<span class="string">&quot;CPM&quot;</span>,<span class="number">80</span>,<span class="number">10</span>,<span class="number">2</span>)  <span class="comment">#Display CPM units  </span></span><br><span class="line">        oled.text(<span class="string">&quot;uSv/h&quot;</span>,<span class="number">80</span>,<span class="number">20</span>,<span class="number">2</span>)  <span class="comment">#Display uSv/h uints  </span></span><br><span class="line">        oled.text(str1,<span class="number">0</span>,<span class="number">10</span>,<span class="number">2</span>)  <span class="comment">#Display CPM data</span></span><br><span class="line">        oled.text(str2,<span class="number">0</span>,<span class="number">20</span>,<span class="number">2</span>)  <span class="comment">#Display uSv/h data</span></span><br><span class="line">        oled.show()  <span class="comment">#Execute Display</span></span><br></pre></td></tr></table></figure>
<p><img src="/upload/Geiger2.jpg" alt="pic2" title="pic2"></p>
]]></content>
  </entry>
  <entry>
    <title>Making Pilot 743Pen tip suitable in Chinese made vacuum filler pen body</title>
    <url>/2024/06/28/MakingPilot743Pen/</url>
    <content><![CDATA[<p>Making Pilot 743Pen tip suitable in Chinese made vacuum filler pen body .<br>Remove the pen tip and tongue from the original pen for later use. The pen tip can be self polished and electroplated to make it look better. Choose a domestically produced pen holder of the same size and size as the 35th model. Remove the nib and tongue of the pen, and groove them on both sides of the back of the tongue to fit the 743 nib positioning buckle. Polish the surface curvature to attach the alloy plate to ensure normal use. After polishing, clean the plastic particles on the tongue to ensure fine and clean bristles. Use a blade to expand the ink guide groove and reinstall the nib together, and then fine tune them together.That’s all.<br><img src="/upload/Pilot1.jpg" alt="pic1" title="pic1"></p>
]]></content>
      <categories>
        <category>pen</category>
      </categories>
      <tags>
        <tag>pen</tag>
      </tags>
  </entry>
  <entry>
    <title>Sheaffer&#39;s Snorkel Pen Filling Structure Renew</title>
    <url>/2024/04/28/Sheaffer-Snorkel-Pen-Renew/</url>
    <content><![CDATA[<p>Sheaffer’s Snorkel Pen Filling Structure Renew </p>
<ol>
<li>Assembly sealing gasket: Unscrew the pen tip assembly, unscrew the breathing tube and take out the aging gasket, remove it and put on a new gasket</li>
<li>Water dispenser assembly: Unscrew the pen holder, remove the water dispenser assembly from the pen holder end, use a screwdriver to completely push out the connector and aging ink cartridge from the small hole at the tail, clean and soak in hot water, remove the ink cartridge connection key and the insect glue that fixes the breathing tube, put on a new ink cartridge, and fix it with insect glue. Remove the breathing tube and clean the ink guide strip before reinstalling it in its original state<br><img src="/upload/Sheaffer1.jpg" alt="pic1" title="pic1"></li>
<li>With a long straight screwdriver, unscrew the tail button screw, push out the TD tube from the pen holder, pick out the aging O-ring with a toothpick, clean the exhaust hole O-ring groove, apply a little glue, and use a toothpick to fully insert the new O-ring into the O-ring groove. When installing the tail button, replace the screw hole sealing gasket, and finally reinstall it in its original state</li>
<li>Overall: Finally, apply lubricating oil to the threads of the water assembly, and also apply silicone oil to other threads to prevent water and air leakage.<br><img src="/upload/Sheaffer2.jpg" alt="pic2" title="pic2"></li>
</ol>
]]></content>
      <categories>
        <category>pen</category>
      </categories>
      <tags>
        <tag>pen</tag>
      </tags>
  </entry>
  <entry>
    <title>Sheaffer&#39;s vaccum filling structure renew</title>
    <url>/2024/06/26/Sheaffer-vaccum-Renew/</url>
    <content><![CDATA[<p>Sheaffer’s vaccum filling structure renew , soaked in hot water at around 60 degrees Celsius to dissolve the tail seal insect glue. After tightening the tail button, continue to rotate clockwise to remove the tail seal. Unscrew the hard rubber screw on the piston head, clean the gap between the pen rod piston head and the original rubber of the tail seal, replace with a new piston plate, and reinstall the original tail seal sample. If the tail seal thread cannot be fixed by friction and becomes loose, stick it with insect glue<br><img src="/upload/Sheaffer3.jpg" alt="pic3" title="pic3"></p>
]]></content>
      <categories>
        <category>pen</category>
      </categories>
      <tags>
        <tag>pen</tag>
      </tags>
  </entry>
  <entry>
    <title>Yongsheng 601 pump piston lubrication and sealing tutorial</title>
    <url>/2024/03/30/Yongsheng-601-pump-piston-renew/</url>
    <content><![CDATA[<p>Yongsheng 601 pump piston lubrication and sealing tutorial.<br><img src="/upload/pic4.jpg" alt="pic4" title="pic4"><br> Drain ink, repeatedly inhale and spit out clean water to ensure no high concentration of ink residue, use factory disassembly, wrench or pliers to unscrew the piston, clean the inner wall of the pen holder and the mixture of ink and water on the piston with a dust-free tissue.<br>  Apply a circle of silicone oil to the piston head groove, use the previous tool to rotate the pen holder back, press a few times before absorbing ink, and ensure that it is evenly distributed inside the pen holder,That’s all.</p>
]]></content>
      <categories>
        <category>pen</category>
      </categories>
      <tags>
        <tag>pen</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/02/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Leica Barnac minor repairs (iiic)</title>
    <url>/2024/02/16/repairs/</url>
    <content><![CDATA[<p>   sometimes cause slow doors to fail and fail to trigger damping, resulting in 1~20 and B doors always being at a speed of 1&#x2F;30. It is possible that a small spring has pushed against the top cover.<br><img src="/upload/pic1.jpg" alt="pic1" title="pic1"><br>   Open the top cover, find it, and press it in the direction of the arrow in the diagram to make it slightly straight. Before reinstalling the cover, test the shutter speed to ensure that the spring tube is not too straight, causing damping to be triggered when the speed is above 1&#x2F;20<br><img src="/upload/pic2.jpg" alt="pic2" title="pic2"><br><img src="/upload/pic3.jpg" alt="pic3" title="pic3"></p>
]]></content>
      <categories>
        <category>camera</category>
      </categories>
      <tags>
        <tag>camera</tag>
      </tags>
  </entry>
</search>
